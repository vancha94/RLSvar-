%% local init
f_if = 0;
ski_amp = 1;

time = 0:1/f_samp:tau_ski-1/f_samp; %отсчеты времени на длине импульсов
%опорный сигнал по формуле (6)
h_ski = ski_amp*exp(1j*2*pi*f_if*time);
h_ski = fliplr(h_ski); %в согл. фильтре ИХ это зеркальное отражение сигнала во времени

%определяем параметры отображения

med = median(abs(raw(:)));
%% быстрая свертка
convolved_data = [];
 %удаляем результаты прошлых вычислений
temp = raw;
 %исходные данны для свертки
n = size(temp,2);
 %число сверток по дальности
m = length(h_ski);
%создаем весовое окно по формуле (10)
wnd = hamming(m)';
%создаем опорный спектр сигнала (т.к. он повернут во
%времени, то комплесного сопряжения не нужно), длина
%спектра должна быть суммой размеров опорной выборки и
%спектра сигнала (формула 7)
H_ski = fft(wnd.*h_ski,m+size(temp,1))';
%размножаем спектр по всем азимутальным каналам
H_ski = repmat(H_ski,1,n);

%вычисляем спектр сигнала в каждом угловом канале (ф.8)
H_RawData = fft(temp,m+size(temp,1),1);
%осуществляем свертку сигнала (ф.9)
convolved_data = ifft(H_RawData.*H_ski);

%% show
figure;
subplot(1,2,1);
imagesc(abs(raw),[0 100*abs(med)]);
subplot(1,2,2);
imagesc(abs(convolved_data),[0 100*abs(med)]);


